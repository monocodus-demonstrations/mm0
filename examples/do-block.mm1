do {
  (display "hello world")      -- hello world
  (print (null? ()))           -- #t
  (if (null? '(1)) 0 1)        -- 1
  (if (null? ()) 0 1)          -- 0
  {2 + 2}                      -- 4
  '{2 + 2}                     -- (+ 2 2)
  {1 < 2 < 3 < 4}              -- #t
  {1 < 2 < 3 < 3}              -- #f
  {1 * 2 * 3 * 4}              -- 24
  (max 1 2 3 4)                -- 4
  (min 1 2 3 4)                -- 1
  (hd '(* 1 2 3 4))            -- *
  (tl '(* 1 2 3 4))            -- (1 2 3 4)
  (list 1 2 3 4)               -- (1 2 3 4)
  (def x 5)
  {x + x}                      -- 10
  (def (x) 5)
  x                            -- #<closure>
  (x)                          -- 5
  (def (fact x) (if {x = 0} 1 {x * (fact {x - 1})}))
  (fact 5)                     -- 120
  ((fn (a) ''a) 1)             -- (quote a)
  ((fn (a) '',a) 1)            -- (quote 1)
  ((fn (a) '(,a . ,a)) 1)      -- (1 . 1)
  (cons (list (def x 2) x) (x))-- ((2) . 5)
};
